name: CI
on:
    pull_request:
        paths-ignore:
            - 'docs/**'
            - 'examples/**'
        branches: [master]
    workflow_dispatch:
jobs:
    generate_matrix:
        name: Get changed packages
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        outputs:
            packages: ${{ steps.changed_packages.outputs.matrix }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Find changed packages
              id: changed_packages
              uses: giautm/matrix-git-generator@master
              with:
                  filters: |
                      packages/*/**:3
    coverage:
        name: Coverage report
        needs: [generate_matrix]
        runs-on: ubuntu-latest
        strategy:
            matrix:
                package: ${{ fromJson(needs.generate_matrix.outputs.packages) }}
        steps:
            - uses: actions/checkout@v1

            - name: Use Node 14.x
              uses: actions/setup-node@v1
              with:
                  node-version: 14.x

            - name: Install npm 17.x
              run: npm i -g npm@latest

            - uses: artiomtr/jest-coverage-report-action@v2.0-rc.2
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  working-directory: ${{ matrix.package }}
                  test-script: npm run test:coverage
    build:
        needs: [generate_matrix]
        name: Build, lint, and test ${{ matrix.package }} package on Node ${{ matrix.node }} and ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                node: ['12.x', '14.x', '16.x']
                package: ${{ fromJson(needs.generate_matrix.outputs.packages) }}
                os: [ubuntu-latest]

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Use Node ${{ matrix.node }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node }}

            - name: Install npm 17.x
              run: npm i -g npm@latest

            - name: Install global dependencies
              run: npm install

            - name: Install global dependencies
              run: npm install

            - name: Install dependencies
              run: npm install
              working-directory: ${{ matrix.package }}

            - name: Lint
              run: yarn lint
              working-directory: ${{ matrix.package }}

            - name: Test
              run: yarn test --ci --coverage --maxWorkers=2
              working-directory: ${{ matrix.package }}

            - name: Build
              run: yarn build
              working-directory: ${{ matrix.package }}
