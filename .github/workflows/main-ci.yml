name: CI
on:
    pull_request:
        paths-ignore:
            - 'packages/docs/**'
            - 'examples/**'
        branches: [master]
    workflow_dispatch:
jobs:
    generate_matrix:
        name: Get changed packages
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        outputs:
            packages: ${{ steps.changed_packages.outputs.result }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Find changed packages
              id: changed_packages
              uses: actions/github-script@v5
              with:
                  script: |
                      let output = "";
                      try {
                          await exec.exec("git fetch --all --depth=1");
                      } catch {}

                      await exec.exec(
                          "bash",
                          [
                              "-c",
                              `"git diff --name-only origin/${context.payload.pull_request.base.ref} HEAD | grep -oP '(?<=packages/)(\\w+)' | uniq"`,
                          ],
                          {
                              listeners: {
                                  stdout: (data) => {
                                      output += data.toString();
                                  },
                              },
                          }
                      );
                      return output
                          .split("\n")
                          .map((dir) => dir.trim())
                          .filter((dir) => dir.length > 0);

    coverage:
        name: Coverage report
        needs: [generate_matrix]
        runs-on: ubuntu-latest
        strategy:
            matrix:
                package: ${{ fromJson(needs.generate_matrix.outputs.packages) }}
        steps:
            - uses: actions/checkout@v1

            - name: Use Node 14.x
              uses: actions/setup-node@v1
              with:
                  node-version: 14.x

            - name: Install npm 17.x
              run: npm i -g npm@latest

            - name: Installing dependencies
              run: npm install

            - uses: artiomtr/jest-coverage-report-action@v2.0-rc.2
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  skip-step: install
                  working-directory: ${{ matrix.package }}
                  test-script: npm run test:coverage
    build:
        needs: [generate_matrix]
        name: Build, lint, and test ${{ matrix.package }} package on Node ${{ matrix.node }} and ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                node: ['14.x', '16.x']
                package: ${{ fromJson(needs.generate_matrix.outputs.packages) }}
                os: [ubuntu-latest]

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Use Node ${{ matrix.node }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node }}

            - name: Install npm 17.x
              run: npm i -g npm@latest

            - name: Install global dependencies
              run: npm install

            - name: Linting, testing & building ${{ matrix.package }}
              run: npx turbo run lint test build --scope=${{ matrix.package }}
