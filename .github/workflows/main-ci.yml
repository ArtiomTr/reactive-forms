name: CI
on:
    pull_request:
        paths-ignore:
            - 'packages/docs/**'
            - 'examples/**'
        branches: [master]
    workflow_dispatch:
jobs:
    generate_matrix:
        name: Get changed packages
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        outputs:
            names: ${{ steps.changed_packages.outputs.names }}
            paths: ${{ steps.changed_packages.outputs.paths }}
            empty: ${{ steps.changed_packages.outputs.empty }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Find changed packages
              id: changed_packages
              uses: alexshukel/get-changed-workspaces-action@v1.0.0
    coverage:
        name: Coverage report
        if: ${{ !fromJson(needs.generate_matrix.outputs.empty) }}
        needs: [generate_matrix]
        runs-on: ubuntu-latest
        strategy:
            matrix:
                path: ${{ fromJson(needs.generate_matrix.outputs.paths) }}
        steps:
            - uses: actions/checkout@v1

            - name: Use Node 14.x
              uses: actions/setup-node@v1
              with:
                  node-version: 14.x

            - name: Install npm 17.x
              run: npm i -g npm@latest

            - name: Installing dependencies
              run: npm install

            - uses: artiomtr/jest-coverage-report-action@v2.0-rc.2
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  skip-step: install
                  working-directory: ${{ matrix.path }}
                  test-script: npm run test:coverage
    build:
        needs: [generate_matrix]
        if: ${{ !fromJson(needs.generate_matrix.outputs.empty) }}
        name: Build, lint, and test ${{ matrix.name }} package on Node ${{ matrix.node }} and ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                node: ['14.x', '16.x']
                name: ${{ fromJson(needs.generate_matrix.outputs.names) }}
                os: [ubuntu-latest]

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Use Node ${{ matrix.node }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node }}

            - name: Install npm 17.x
              run: npm i -g npm@latest

            - name: Install global dependencies
              run: npm install

            - name: Linting, testing & building ${{ matrix.name }}
              run: npx turbo run lint test build --scope=${{ matrix.name }} --include-dependencies --no-deps
